[{"E:\\0 1st Sem Linnaeus\\Git\\FE-technical-test\\booking_app\\booking_app\\src\\index.js":"1","E:\\0 1st Sem Linnaeus\\Git\\FE-technical-test\\booking_app\\booking_app\\src\\App.js":"2","E:\\0 1st Sem Linnaeus\\Git\\FE-technical-test\\booking_app\\booking_app\\src\\reportWebVitals.js":"3","E:\\0 1st Sem Linnaeus\\Git\\FE-technical-test\\booking_app\\booking_app\\src\\api_integration\\propertyReducer.js":"4","E:\\0 1st Sem Linnaeus\\Git\\FE-technical-test\\booking_app\\booking_app\\src\\components\\Dashboard.js":"5","E:\\0 1st Sem Linnaeus\\Git\\FE-technical-test\\booking_app\\booking_app\\src\\components\\Header.js":"6","E:\\0 1st Sem Linnaeus\\Git\\FE-technical-test\\booking_app\\booking_app\\src\\components\\SearchForm.js":"7","E:\\0 1st Sem Linnaeus\\Git\\FE-technical-test\\booking_app\\booking_app\\src\\components\\Footer.js":"8","E:\\0 1st Sem Linnaeus\\Git\\FE-technical-test\\booking_app\\booking_app\\src\\components\\PropertyCard.js":"9","E:\\0 1st Sem Linnaeus\\Git\\FE-technical-test\\booking_app\\booking_app\\src\\components\\AddProperty.js":"10"},{"size":759,"mtime":1611293747499,"results":"11","hashOfConfig":"12"},{"size":182,"mtime":1611286479250,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":558,"mtime":1611250076386,"results":"15","hashOfConfig":"12"},{"size":1262,"mtime":1611312483554,"results":"16","hashOfConfig":"12"},{"size":519,"mtime":1611295451700,"results":"17","hashOfConfig":"12"},{"size":1771,"mtime":1611297595841,"results":"18","hashOfConfig":"12"},{"size":3465,"mtime":1611312396248,"results":"19","hashOfConfig":"12"},{"size":907,"mtime":1611297647790,"results":"20","hashOfConfig":"12"},{"size":7828,"mtime":1611306093808,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"bl2tux",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},"E:\\0 1st Sem Linnaeus\\Git\\FE-technical-test\\booking_app\\booking_app\\src\\index.js",[],["47","48"],"E:\\0 1st Sem Linnaeus\\Git\\FE-technical-test\\booking_app\\booking_app\\src\\App.js",[],"E:\\0 1st Sem Linnaeus\\Git\\FE-technical-test\\booking_app\\booking_app\\src\\reportWebVitals.js",[],"E:\\0 1st Sem Linnaeus\\Git\\FE-technical-test\\booking_app\\booking_app\\src\\api_integration\\propertyReducer.js",[],"E:\\0 1st Sem Linnaeus\\Git\\FE-technical-test\\booking_app\\booking_app\\src\\components\\Dashboard.js",["49"],"E:\\0 1st Sem Linnaeus\\Git\\FE-technical-test\\booking_app\\booking_app\\src\\components\\Header.js",["50"],"import React from 'react';\r\nimport SearchForm from './SearchForm';\r\n\r\nconst Header = ({}) => {\r\n\r\n    return (\r\n        <div className=\"row header-container\">\r\n            <div className=\"col-12\">\r\n                <div className=\"d-block header-text float-left\">\r\n                    <h2>Resorts</h2>\r\n                    <p>Treat yourself! Your dream resort stay is just a few clicks away.</p>\r\n                </div>\r\n            </div>\r\n            <SearchForm />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","E:\\0 1st Sem Linnaeus\\Git\\FE-technical-test\\booking_app\\booking_app\\src\\components\\SearchForm.js",["51","52"],"import React, { useState, useEffect } from 'react';\r\n\r\nconst SearchForm = ({}) => {\r\n\r\n    const [country, setCountry] = useState(\"\");\r\n    const [city, setCity] = useState(\"\");\r\n\r\n    const handleChangeSearchField = (event) => {\r\n        if (event.target.id === \"country\") {\r\n            setCountry(event.target.value);\r\n        }\r\n        if (event.target.id === \"city\") {\r\n            setCity(event.target.value);\r\n        }\r\n    }\r\n\r\n    const searchProperty = (event) => {\r\n        console.log(country);\r\n        console.log(city);\r\n    }\r\n\r\n    return (\r\n        <div className=\"col-12\">\r\n            <div className=\"row\">\r\n                <div className=\"col-6 col-sm-5\">\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"form-control\" \r\n                        id=\"country\" \r\n                        placeholder=\"country\"\r\n                        onChange={(event) => handleChangeSearchField(event)}\r\n                    />\r\n                </div>\r\n                <div className=\"col-6 col-sm-5\">\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"form-control\" \r\n                        id=\"city\" \r\n                        placeholder=\"city\" \r\n                        onChange={(event) => handleChangeSearchField(event)}\r\n                    />\r\n                </div>\r\n                <div className=\"col-6 col-sm-2\">\r\n                    <button \r\n                        className=\"btn btn-primary\"\r\n                        onClick={(event) => searchProperty(event)}\r\n                    >\r\n                        Search\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchForm;","E:\\0 1st Sem Linnaeus\\Git\\FE-technical-test\\booking_app\\booking_app\\src\\components\\Footer.js",["53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73"],"E:\\0 1st Sem Linnaeus\\Git\\FE-technical-test\\booking_app\\booking_app\\src\\components\\PropertyCard.js",["74","75","76","77"],"import React, { useState, useEffect } from 'react';\r\n\r\nconst PropertyCard = ({}) => {\r\n\r\n    return (\r\n        <div className=\"col-12\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-sm-4 mt-5 mb-5\">\r\n                    <div className=\"card\" style={{\"width\": \"18rem\"}}>\r\n                        <img src=\"...\" className=\"card-img-top\" alt=\"...\" />\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">Card title</h5>\r\n                            <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n                            <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PropertyCard;","E:\\0 1st Sem Linnaeus\\Git\\FE-technical-test\\booking_app\\booking_app\\src\\components\\AddProperty.js",["78"],"import React, { useState, useEffect, useRef } from 'react';\r\n\r\nconst AddProperty = ({ hideAddForm }) => {\r\n\r\n    const [title, setTitle] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const propertyimage = useRef(null);\r\n    const [price, setPrice] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n    const [rating, setRating] = useState(0);\r\n    const [comments, setComments] = useState(\"\");\r\n    const propertyavatar = useRef(null);\r\n    const [username, setUsername] = useState(\"\");\r\n    const [country, setCountry] = useState(\"\");\r\n    const [city, setCity] = useState(\"\");\r\n\r\n    const handleChangeFormField = (event) => {\r\n        if (event.target.id === \"title\") {\r\n            setTitle(event.target.value);\r\n        }\r\n        if (event.target.id === \"description\") {\r\n            setDescription(event.target.value);\r\n        }\r\n        if (event.target.id === \"price\") {\r\n            setPrice(event.target.value);\r\n        }\r\n        if (event.target.id === \"type\") {\r\n            setType(event.target.value);\r\n        }\r\n        if (event.target.id === \"rating\") {\r\n            setRating(event.target.value);\r\n        }\r\n        if (event.target.id === \"comments\") {\r\n            setComments(event.target.value);\r\n        }\r\n        if (event.target.id === \"username\") {\r\n            setUsername(event.target.value);\r\n        }\r\n        if (event.target.id === \"country\") {\r\n            setCountry(event.target.value);\r\n        }\r\n        if (event.target.id === \"city\") {\r\n            setCity(event.target.value);\r\n        }\r\n    }\r\n\r\n    const addProperty = (event) => {\r\n        console.log(title);\r\n        console.log(description);\r\n        console.log(price);\r\n        console.log(type);\r\n        console.log(rating);\r\n        console.log(comments);\r\n        console.log(username);\r\n        console.log(country);\r\n        console.log(city);\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <h4 className=\"mt-5 ml-3\">Add property</h4>\r\n            <div className=\"col-12\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-sm-6 mt-5\">\r\n                        <label htmlFor=\"title\" className=\"form-label\">Title</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"form-control\" \r\n                            id=\"title\" \r\n                            placeholder=\"title\"\r\n                            onChange={(event) => handleChangeFormField(event)}\r\n                            required\r\n                        />\r\n                        <label htmlFor=\"propertyimage\" className=\"form-label mt-3\">Image</label>\r\n                        <input \r\n                            className=\"form-control\" \r\n                            type=\"file\"\r\n                            id=\"propertyimage\"\r\n                            ref={propertyimage}\r\n                            multiple\r\n                            required \r\n                        />\r\n                        <label htmlFor=\"description\" className=\"form-label mt-3\">Description</label>\r\n                        <textarea \r\n                            className=\"form-control\" \r\n                            id=\"description\" \r\n                            placeholder=\"description\"\r\n                            rows=\"3\"\r\n                            onChange={(event) => handleChangeFormField(event)}\r\n                            required\r\n                        ></textarea>\r\n                        <label htmlFor=\"price\" className=\"form-label mt-3\">Price</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"form-control\" \r\n                            id=\"price\" \r\n                            placeholder=\"price\"\r\n                            onChange={(event) => handleChangeFormField(event)}\r\n                            required\r\n                        />\r\n                        <label htmlFor=\"type\" className=\"form-label mt-3\">Type</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"form-control\" \r\n                            id=\"type\" \r\n                            placeholder=\"type\"\r\n                            onChange={(event) => handleChangeFormField(event)}\r\n                            required\r\n                        />\r\n                        <label htmlFor=\"rating\" className=\"form-label mt-3\">Rating</label>\r\n                        <input \r\n                            type=\"number\" \r\n                            className=\"form-control\" \r\n                            id=\"rating\" \r\n                            placeholder=\"rating\"\r\n                            min=\"0\"\r\n                            onChange={(event) => handleChangeFormField(event)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 mt-5\">\r\n                        <label htmlFor=\"comments\" className=\"form-label\">Comments</label>\r\n                        <textarea \r\n                            className=\"form-control\" \r\n                            id=\"comments\" \r\n                            placeholder=\"comments\"\r\n                            rows=\"3\"\r\n                            onChange={(event) => handleChangeFormField(event)}\r\n                            required\r\n                        ></textarea>\r\n                        <label htmlFor=\"prpropertyavataropertyimage\" className=\"form-label mt-3\">Avatar</label>\r\n                        <input \r\n                            className=\"form-control\" \r\n                            type=\"file\"\r\n                            id=\"propertyavatar\"\r\n                            ref={propertyavatar}\r\n                            multiple\r\n                            required \r\n                        />\r\n                        <label htmlFor=\"username\" className=\"form-label mt-3\">Username</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"form-control\" \r\n                            id=\"username\" \r\n                            placeholder=\"username\"\r\n                            onChange={(event) => handleChangeFormField(event)}\r\n                            required\r\n                        />\r\n                        <label htmlFor=\"country\" className=\"form-label mt-3\">Country</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"form-control\" \r\n                            id=\"country\" \r\n                            placeholder=\"country\"\r\n                            onChange={(event) => handleChangeFormField(event)}\r\n                            required\r\n                        />\r\n                        <label htmlFor=\"city\" className=\"form-label mt-3\">City</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"form-control\" \r\n                            id=\"city\" \r\n                            placeholder=\"city\" \r\n                            onChange={(event) => handleChangeFormField(event)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 mt-5 mb-5\">\r\n                        <button className=\"btn btn-primary\" onClick={(event) => addProperty(event)}>Save</button>\r\n                        <button className=\"btn btn-warning ml-3\" onClick={(event) => hideAddForm(event)}>Cancel</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddProperty;",{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":7,"column":20,"nodeType":"85","messageId":"86","endLine":7,"endColumn":22},{"ruleId":"83","severity":1,"message":"84","line":4,"column":17,"nodeType":"85","messageId":"86","endLine":4,"endColumn":19},{"ruleId":"87","severity":1,"message":"88","line":1,"column":27,"nodeType":"89","messageId":"90","endLine":1,"endColumn":36},{"ruleId":"83","severity":1,"message":"84","line":3,"column":21,"nodeType":"85","messageId":"86","endLine":3,"endColumn":23},{"ruleId":"83","severity":1,"message":"84","line":5,"column":17,"nodeType":"85","messageId":"86","endLine":5,"endColumn":19},{"ruleId":"91","severity":1,"message":"92","line":24,"column":17,"nodeType":"93","endLine":24,"endColumn":54},{"ruleId":"91","severity":1,"message":"92","line":25,"column":17,"nodeType":"93","endLine":25,"endColumn":49},{"ruleId":"91","severity":1,"message":"92","line":26,"column":17,"nodeType":"93","endLine":26,"endColumn":49},{"ruleId":"91","severity":1,"message":"92","line":27,"column":17,"nodeType":"93","endLine":27,"endColumn":49},{"ruleId":"91","severity":1,"message":"92","line":28,"column":17,"nodeType":"93","endLine":28,"endColumn":49},{"ruleId":"91","severity":1,"message":"92","line":29,"column":17,"nodeType":"93","endLine":29,"endColumn":49},{"ruleId":"91","severity":1,"message":"92","line":30,"column":17,"nodeType":"93","endLine":30,"endColumn":49},{"ruleId":"91","severity":1,"message":"92","line":33,"column":17,"nodeType":"93","endLine":33,"endColumn":54},{"ruleId":"91","severity":1,"message":"92","line":34,"column":17,"nodeType":"93","endLine":34,"endColumn":49},{"ruleId":"91","severity":1,"message":"92","line":35,"column":17,"nodeType":"93","endLine":35,"endColumn":49},{"ruleId":"91","severity":1,"message":"92","line":36,"column":17,"nodeType":"93","endLine":36,"endColumn":49},{"ruleId":"91","severity":1,"message":"92","line":37,"column":17,"nodeType":"93","endLine":37,"endColumn":49},{"ruleId":"91","severity":1,"message":"92","line":38,"column":17,"nodeType":"93","endLine":38,"endColumn":49},{"ruleId":"91","severity":1,"message":"92","line":39,"column":17,"nodeType":"93","endLine":39,"endColumn":49},{"ruleId":"91","severity":1,"message":"92","line":40,"column":17,"nodeType":"93","endLine":40,"endColumn":49},{"ruleId":"91","severity":1,"message":"92","line":43,"column":17,"nodeType":"93","endLine":43,"endColumn":54},{"ruleId":"91","severity":1,"message":"92","line":44,"column":17,"nodeType":"93","endLine":44,"endColumn":49},{"ruleId":"91","severity":1,"message":"92","line":45,"column":17,"nodeType":"93","endLine":45,"endColumn":49},{"ruleId":"91","severity":1,"message":"92","line":46,"column":17,"nodeType":"93","endLine":46,"endColumn":49},{"ruleId":"91","severity":1,"message":"92","line":47,"column":17,"nodeType":"93","endLine":47,"endColumn":49},{"ruleId":"87","severity":1,"message":"94","line":1,"column":17,"nodeType":"89","messageId":"90","endLine":1,"endColumn":25},{"ruleId":"87","severity":1,"message":"88","line":1,"column":27,"nodeType":"89","messageId":"90","endLine":1,"endColumn":36},{"ruleId":"83","severity":1,"message":"84","line":3,"column":23,"nodeType":"85","messageId":"86","endLine":3,"endColumn":25},{"ruleId":"91","severity":1,"message":"92","line":14,"column":29,"nodeType":"93","endLine":14,"endColumn":69},{"ruleId":"87","severity":1,"message":"88","line":1,"column":27,"nodeType":"89","messageId":"90","endLine":1,"endColumn":36},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]